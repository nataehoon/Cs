<div>
    <ul class="dropdown mt-3">
        <a class="nav-link" @onclick="Profile">
            @if(loginfo != null){
                <img src="@loginfo.Pimage" style="width:30px;height:30px;cursor:pointer" alt="Profile" class="rounded-circle" />
            }else{
                <img src="/image/profile.jpg" style="width:30px;height:30px;cursor:pointer" alt="Profile" class="rounded-circle" />
            }
        </a>
        @if (cnt % 2 != 0)
        {
            <div class="dropdown-menu show" x-placement="bottom-end" style="position: absolute; transform: translate3d(-60px, 40px, 0px); top: 0px; left: 0px; will-change: transform;">
                @if (loginfo != null)
                {
                    if (loginfo.Resposibility.Equals("총책임자"))
                    {
                        <div class="dropdown-item">
                            <NavLink class="nav-link" style="cursor:pointer;color:black" @onclick="@(() => {navigationManager.NavigateTo("/adminpage", forceLoad:true);})">
                                <span class="oi oi-bar-chart" aria-hidden="true"></span> 관리자 페이지
                            </NavLink>
                        </div>
                    }
                    <div class="dropdown-item">
                        <NavLink class="nav-link" style="cursor:pointer;color:black" @onclick="@(() => {navigationManager.NavigateTo("/memberview", forceLoad:true);})">
                            <span class="oi oi-person" aria-hidden="true"></span> 계정 관리
                        </NavLink>
                    </div>
                    <hr />
                    <div class="dropdown-item">
                        <NavLink class="nav-link" style="cursor:pointer;color:black" @onclick="@(async () => {await sessionStorage.ClearAsync(); navigationManager.NavigateTo("/", forceLoad:true);})">
                            <span class="oi oi-account-logout" aria-hidden="true"></span> 로그아웃
                        </NavLink>
                    </div>
                }
                else
                {
                    <div class="dropdown-item">
                        <NavLink class="nav-link" style="cursor:pointer;color:black" @onclick="OpenLogin">
                            <span class="oi oi-account-login" aria-hidden="true"></span> 로그인
                        </NavLink>
                    </div>

                }
            </div>
        }
    </ul>
</div>

<div class="modal-backdrop fade @(show ? "show" : "") @(display ? "d-block" : "d-none")"></div>

<div class="modal fade @(show ? "show" : "") @(display ? "d-block" : "d-none")" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Login Form</h5>
                <button type="button" class="close btn-secondary" data-dismiss="modal" aria-label="Close" @onclick="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <EditForm Model="member" OnSubmit="LoginCheck">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="loginId" class="form-label">ID</label>
                        <InputText type="text" @bind-Value="member.Id" class="form-control" id="loginId" placeholder="아이디를 입력하세요" autocomplete="off" required ></InputText>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <InputText type="password" @bind-Value="member.Pw" class="form-control" id="password" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="@(() => {navigationManager.NavigateTo("/memberform", forceLoad:true);})">회원가입</button>
                    <button type="submit" class="btn btn-secondary">Login</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal"ismiss @onclick="Close">Close</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    public Member? loginfo { get; set; }

    private bool show, display, loggedIn;
    private int cnt = 0;
    Member member = new Member();

    protected override async Task OnInitializedAsync()
    {
        loginfo = await sessionStorage.GetItemAsync<Member>("loginfo");
    }

    private void Profile()
    {
        cnt++;
    }

    public async Task OpenLogin(){
        display = true;
        await Task.Delay(100);
        show = true;
    }
    public async Task Close(){
        display = false;
        await Task.Delay(200);
        show = false;
    }

    public async Task LoginCheck()
    {
        var result = await MemberService.GetMemberByIdAsync(member.Id);
        if (result.Pw == member.Pw && result.Id == member.Id)
        {
            await Close();
            loggedIn = true;
            if(loggedIn == true){
                await sessionStorage.SetItemAsync<Member>("loginfo", result);
            }
            navigationManager.NavigateTo("/", forceLoad: true);

        }
        else
        {
            Console.WriteLine("Login Failed");
        }
        
    }
}
