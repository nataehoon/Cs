@page "/memberform"
@page "/memberform/{id}"

<h3>Memberform</h3>

<EditForm Model="member" OnSubmit="Handlesubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div>
        <label for="id">아이디</label>
        <InputText id="id" @bind-Value="member.Id" class="form-control" disabled="@Isdisabled"></InputText>
    </div>
    <div>
        <label for="pw">비밀번호</label>
        <InputText id="pw" type="password" @bind-Value="member.Pw" class="form-control" disabled="@Isdisabled"></InputText>
        @if(@Isdisabled == false){
            <label for="pw">비밀번호 확인</label>
            <InputText id="pw" type="password" @bind-Value="repw" class="form-control"></InputText>
            @if (member.Pw != repw)
            {
                <p>비밀번호가 일치하지 않습니다.</p>
            }
        }
    </div>
    <div>
        <label for="name">이름</label>
        <InputText id="name" @bind-Value="member.Name" class="form-control"></InputText>
    </div>
    <div>
        <label for="gender">성별</label>
        <br />
        <InputRadioGroup id="gender" @bind-Value="member.Gender" class="form-control">
            @foreach(var gender in genders){
                <InputRadio Value="@gender" checked/>
                <span style="padding-left:5px;">@gender</span>
                <br/>
            }
        </InputRadioGroup>
    </div>
    <div>
        <label for="age">나이</label>
        <InputNumber id="age" @bind-Value="member.Age" class="form-control"></InputNumber>
    </div>
    <div>
        <label for="nick">닉네임</label>
        <InputText id="nick" @bind-Value="member.Nick" class="form-control"></InputText>
    </div>
    <div>
        <label for="email">이메일</label>
        <InputText id="email" @bind-Value="member.Email" class="form-control"></InputText>
    </div>
    <div>
        <label for="hp">휴대폰 번호</label>
        <InputNumber id="hp" @bind-Value="member.Hp" class="form-control"></InputNumber>
    </div>
    @if(id != null){
        <div>
            <label for="resposibility">직책</label>
            <InputText id="resposibility" @bind-Value="member.Resposibility" class="form-control" disabled="false"></InputText>
        </div>
    }
    else
    {
        <div>
            <InputText id="resposibility" @bind-Value="member.Resposibility" class="form-control" hidden></InputText>
        </div>
    }
    
    <div>
        <label for="postop">수술 여부</label>
        <br />
        @if (member.Postop == null || member.Postop == "" || member.Postop == "아니오")
        {
            <InputRadioGroup id="postop" @bind-Value="member.Postop" class="form-control">
                @foreach(var isCheck in isChecks){
                    <InputRadio Value="@isCheck"/>
                    <span>@isCheck</span>
                    <br/>
                }
            </InputRadioGroup>
        }else if(member.Postop == "예"){
            <InputRadioGroup id="postop" @bind-Value="member.Postop" class="forn-control">
                <InputRadio Value="isChecks[0]" checked/>
                <span>예</span>
                <br/>
                <InputRadio Value="isChecks[1]"/>
                <span>아니오</span>
                <br/>
            </InputRadioGroup>
            <InputTextArea id="postop" @bind-Value="pop" class="form-control"></InputTextArea>
        }else{
            <InputRadioGroup id="postop" @bind-Value="member.Postop" class="forn-control">
                <span>◎ 예</span>
                <br/>
                <InputRadio Value="isChecks[1]"/>
                <span>아니오</span>
                <br/>
            </InputRadioGroup>
            <InputTextArea id="postop" @bind-Value="member.Postop" class="form-control"></InputTextArea>
        }
    </div>
    <div>
        <label for="mehistory">병력</label>
        <br />
        @if (member.Mehistory == null || member.Mehistory == "" || member.Mehistory == "아니오")
        {
            <InputRadioGroup id="mehistory" @bind-Value="member.Mehistory" class="form-control">
                @foreach (var isCheck in isChecks)
                {
                    <InputRadio Value="@isCheck" />
                    <span>@isCheck</span>
                    <br />
                }
            </InputRadioGroup>
        }
        else if(member.Mehistory == "예")
        {
            <InputRadioGroup id="mehistory" @bind-Value="member.Mehistory" class="forn-control">
                <InputRadio Value="isChecks[0]" checked />
                <span>예</span>
                <br />
                <InputRadio Value="isChecks[1]" />
                <span>아니오</span>
                <br />
            </InputRadioGroup>
            <InputTextArea id="mehistory" @bind-Value="mehicontent" class="form-control"></InputTextArea>
        }
        else
        {
            <InputRadioGroup id="mehistory" @bind-Value="member.Mehistory" class="forn-control">
                <span>◎ 예</span>
                <br />
                <InputRadio Value="isChecks[1]" />
                <span>아니오</span>
                <br />
            </InputRadioGroup>
            <InputTextArea id="mehistory" @bind-Value="member.Mehistory" class="form-control"></InputTextArea>
        }
    </div>
    <div>
        <label for="exhistory">운동경력</label>
        <InputText id="exhistory" @bind-Value="member.Exhistory" class="form-control"></InputText>
    </div>
    <div>
        <label for="memo">메모</label>
        <InputText id="memo" @bind-Value="member.Memo" class="form-control"></InputText>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
</EditForm>

@code {
    [Parameter]
    public string? id { get; set; }

    string btnText = string.Empty;
    string[] genders = { "남자", "여자" };
    string[] isChecks = { "예", "아니오" };
    string mehicontent = string.Empty;
    string pop = string.Empty;

    private string? repw { get; set; }
    private Member member = new Member();

    protected bool pwcheck{ get; set; }
    protected bool Isdisabled { get; set; } = false;

    protected override void OnInitialized()
    {
        btnText = id == null ? "저장" : "수정";
    }

    protected override async Task OnInitializedAsync()
    {
        id = await sessionStorage.GetItemAsStringAsync("loginfo");
        if(id != null){
            member = await MemberService.GetMemberByIdAsync(id);
            Isdisabled = true;
            navigationManager.NavigateTo("/memberform/" + id);
        }
        else{
            member.Resposibility = "미선택";
        }
    }

    async Task Handlesubmit()
    {
        if (mehicontent != null && mehicontent != "")
        {
            member.Mehistory = mehicontent;
        }
        if (pop != null && pop != "")
        {
            member.Postop = pop;
        }
        if (Isdisabled != true)
        {
            await MemberService.CreateMemberAsync(member);
        }
        else
        {
            await MemberService.UpdateMemberAsync(member, member.Id);
        }

    }
}
